Determining size of off64_t failed with the following output:
Change Dir: /Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/local/bin/gmake" "cmTC_fcd3c/fast"
/usr/local/bin/gmake -f CMakeFiles/cmTC_fcd3c.dir/build.make CMakeFiles/cmTC_fcd3c.dir/build
gmake[1]: Entering directory '/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_fcd3c.dir/OFF64_T.c.o
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc -DHAVE_STDDEF_H -DHAVE_STDINT_H -DHAVE_SYS_TYPES_H -D_LARGEFILE64_SOURCE=1  -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_fcd3c.dir/OFF64_T.c.o   -c /Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:25:12: error: use of undeclared identifier 'off64_t'
  ('0' + ((SIZE / 10000)%10)),
           ^
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:23:22: note: expanded from macro 'SIZE'
#define SIZE (sizeof(off64_t))
                     ^
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:26:12: error: use of undeclared identifier 'off64_t'
  ('0' + ((SIZE / 1000)%10)),
           ^
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:23:22: note: expanded from macro 'SIZE'
#define SIZE (sizeof(off64_t))
                     ^
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:27:12: error: use of undeclared identifier 'off64_t'
  ('0' + ((SIZE / 100)%10)),
           ^
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:23:22: note: expanded from macro 'SIZE'
#define SIZE (sizeof(off64_t))
                     ^
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:28:12: error: use of undeclared identifier 'off64_t'
  ('0' + ((SIZE / 10)%10)),
           ^
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:23:22: note: expanded from macro 'SIZE'
#define SIZE (sizeof(off64_t))
                     ^
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:29:12: error: use of undeclared identifier 'off64_t'
  ('0' +  (SIZE    % 10)),
           ^
/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:23:22: note: expanded from macro 'SIZE'
#define SIZE (sizeof(off64_t))
                     ^
5 errors generated.
gmake[1]: *** [CMakeFiles/cmTC_fcd3c.dir/build.make:66: CMakeFiles/cmTC_fcd3c.dir/OFF64_T.c.o] Error 1
gmake[1]: Leaving directory '/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CMakeTmp'
gmake: *** [Makefile:121: cmTC_fcd3c/fast] Error 2

/Users/yash/Documents/college/2-2/graphics/mygame/build/CMakeFiles/CheckTypeSize/OFF64_T.c:
#include <sys/types.h>
#include <stdint.h>
#include <stddef.h>


#undef KEY
#if defined(__i386)
# define KEY '_','_','i','3','8','6'
#elif defined(__x86_64)
# define KEY '_','_','x','8','6','_','6','4'
#elif defined(__ppc__)
# define KEY '_','_','p','p','c','_','_'
#elif defined(__ppc64__)
# define KEY '_','_','p','p','c','6','4','_','_'
#elif defined(__aarch64__)
# define KEY '_','_','a','a','r','c','h','6','4','_','_'
#elif defined(__ARM_ARCH_7A__)
# define KEY '_','_','A','R','M','_','A','R','C','H','_','7','A','_','_'
#elif defined(__ARM_ARCH_7S__)
# define KEY '_','_','A','R','M','_','A','R','C','H','_','7','S','_','_'
#endif

#define SIZE (sizeof(off64_t))
char info_size[] =  {'I', 'N', 'F', 'O', ':', 's','i','z','e','[',
  ('0' + ((SIZE / 10000)%10)),
  ('0' + ((SIZE / 1000)%10)),
  ('0' + ((SIZE / 100)%10)),
  ('0' + ((SIZE / 10)%10)),
  ('0' +  (SIZE    % 10)),
  ']',
#ifdef KEY
  ' ','k','e','y','[', KEY, ']',
#endif
  '\0'};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_size[argc];
  (void)argv;
  return require;
}


